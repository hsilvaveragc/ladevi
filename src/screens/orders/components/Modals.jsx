import Modal from 'shared/components/Modal';

import OrderForm from './Form';

const OrderModals = (props) => (
  <>
    <Modal
      shouldClose={true}
      closeHandler={props.actions.showAddModal}
      isOpen={props.showAddModal}
    >
      <OrderForm
        selectedItem={{}}
        availableProducts={props.availableProducts}
        availableEditions={props.availableEditions}
        availableSalesmens={props.availableSalesmens}
        availableClients={props.availableClients}
        availableContracts={props.availableContracts}
        availableSpaceTypes={props.availableSpaceTypes}
        availableSpaceLocations={props.availableSpaceLocations}
        saveHandler={props.actions.addOrder}
        addMode={true}
        errors={props.errors}
        closeHandler={props.actions.showAddModal}
        getProductEditionsHandler={props.actions.getEditionsForOP}
        getContractsAvailableHandler={props.actions.getContractsAvailable}
        getSpaceTypesAvailableHandler={props.actions.getSpaceTypesAvailable}
        getSpaceLocationsAvailableHandler={
          props.actions.getSpaceLocationsAvailable
        }
        getClientsWithBalanceHandler={
          props.actions.getClientsWithBalanceAvailable
        }
        params={props.params}
        allClients={props.allClients}
        isLoadingClients={props.isLoadingClients}
        isLoadingContracts={props.isLoadingContracts}
        isLoadingSpaceTypes={props.isLoadingSpaceTypes}
        isLoadingSpaceLocations={props.isLoadingSpaceLocations}
      />
    </Modal>
    <Modal
      shouldClose={true}
      closeHandler={props.actions.showEditModal}
      isOpen={props.showEditModal}
    >
      <OrderForm
        selectedItem={props.selectedItem}
        availableProducts={props.availableProducts}
        availableEditions={props.availableEditions}
        availableSalesmens={props.availableSalesmens}
        availableClients={props.availableClients}
        availableContracts={props.availableContracts}
        availableSpaceTypes={props.availableSpaceTypes}
        availableSpaceLocations={props.availableSpaceLocations}
        saveHandler={props.actions.editOrder}
        editMode={true}
        errors={props.errors}
        closeHandler={props.actions.showEditModal}
        getProductEditionsHandler={props.actions.getEditionsForOP}
        getContractsAvailableHandler={props.actions.getContractsAvailable}
        getSpaceTypesAvailableHandler={props.actions.getSpaceTypesAvailable}
        getSpaceLocationsAvailableHandler={
          props.actions.getSpaceLocationsAvailable
        }
        getClientsWithBalanceHandler={
          props.actions.getClientsWithBalanceAvailable
        }
        params={props.params}
        allClients={props.allClients}
        isLoadingClients={props.isLoadingClients}
        isLoadingContracts={props.isLoadingContracts}
        isLoadingSpaceTypes={props.isLoadingSpaceTypes}
        isLoadingSpaceLocations={props.isLoadingSpaceLocations}
      />
    </Modal>
    <Modal
      shouldClose={true}
      closeHandler={props.actions.showDeleteModal}
      isOpen={props.showDeleteModal}
    >
      <OrderForm
        selectedItem={props.selectedItem}
        availableProducts={props.availableProducts}
        availableEditions={props.availableEditions}
        availableSalesmens={props.availableSalesmens}
        availableClients={props.availableClients}
        availableContracts={props.availableContracts}
        availableSpaceTypes={props.availableSpaceTypes}
        availableSpaceLocations={props.availableSpaceLocations}
        saveHandler={props.actions.deleteOrder}
        deleteMode={true}
        errors={props.errors}
        closeHandler={props.actions.showDeleteModal}
        getProductEditionsHandler={props.actions.getEditionsForOP}
        getContractsAvailableHandler={props.actions.getContractsAvailable}
        getSpaceTypesAvailableHandler={props.actions.getSpaceTypesAvailable}
        getSpaceLocationsAvailableHandler={
          props.actions.getSpaceLocationsAvailable
        }
        getClientsWithBalanceHandler={
          props.actions.getClientsWithBalanceAvailable
        }
        params={props.params}
        allClients={props.allClients}
        isLoading={props.isLoading}
        isLoadingClients={props.isLoadingClients}
        isLoadingContracts={props.isLoadingContracts}
        isLoadingSpaceTypes={props.isLoadingSpaceTypes}
        isLoadingSpaceLocations={props.isLoadingSpaceLocations}
      />
    </Modal>
  </>
);

export default OrderModals;
